library(knitr)
kable(output4, digits=2)
Highest<- NBA1415$ThreesMade / NBA1415$ThreesAttempted
Highest
MaxHighest<-aggregate(Highest~Team,NBA1415,max)
MaxHighest
NBA1415MaxHighest<-merge(NBA1415,MaxHighest)
NBA1415MaxHighest
FinalOutput4<-NBA1415MaxHighest[order(NBA1415MaxHighest$Highest,decreasing = T),c("Team","Name","Highest")]
FinalOutput4
library(knitr)
kable(FinalOutput4, digits=2)
FinalOutput2<-NULL
for(team in unique(NBA1415$Team)){
selectTeam<-subset(NBA1415,Team==team)
FinalOutput2<-rbind(FinalOutput2,
selectTeam[
order(selectTeam$TotalPoints,decreasing = T),c("Name","Team","TotalPoints")])
}
FinalOutput2
library(knitr)
kable(FinalOutput2, digits=2)
FinalOutput2<-NULL
for(team in unique(NBA1415$Team)){
selectTeam<-subset(NBA1415,Team==team)
FinalOutput2<-rbind(FinalOutput2,
selectTeam[
order(selectTeam$TotalPoints,decreasing = T)[1],
c("Name","Team","TotalPoints")])
}
FinalOutput2
library(knitr)
kable(FinalOutput2, digits=2)
FinalOutput2<-NULL
MaxPoint<-aggregate(TotalPoints~Team,NBA1415,max)
NBA1415MaxPoint<-merge(NBA1415,MaxPoint)
FinalOutput2<-NBA1415MaxPoint[order(NBA1415MaxPoint$TotalPoints,decreasing = T),c("Team","Name","TotalPoints")]
library(knitr)
kable(FinalOutput2, digits=2)
#各隊三分球出手最準的球員(ThreesMade/ThreesAttempted 最高)
Highest<- NBA1415$ThreesMade / NBA1415$ThreesAttempted
MaxHighest<-aggregate(Highest~Team,NBA1415,max)
NBA1415MaxHighest<-merge(NBA1415,MaxHighest)
FinalOutput4<-NBA1415MaxHighest[order(NBA1415MaxHighest$Highest,decreasing = T),c("Team","Name","Highest")]
library(knitr)
kable(FinalOutput4, digits=2)
#各隊最有效率的球員(總得分/出戰分鐘數)
efficiency <- NBA1415$TotalPoints /NBA1415$TotalMinutesPlayed
Maxefficiency<-aggregate(efficiency~Team,NBA1415,max)
NBA1415Maxefficiency<-merge(NBA1415,Maxefficiency)
FinalOutput3<-NBA1415Maxefficiency[order(NBA1415Maxefficiency$efficiency,decreasing = T),c("Team","Name","efficiency")]
library(knitr)
kable(FinalOutput3, digits=2)
NBA1415$Efficiency <- NBA1415$TotalPoints / NBA1415$TotalMinutesPlayed
MaxEfficiency<-aggregate(Efficiency~Team,NBA1415,max)
NBA1415MaxEfficiency<-merge(NBA1415,MaxEfficiency)
output<-NBA1415MaxEfficiency[order(NBA1415MaxEfficiency$Efficiency,decreasing = T),c("Team","Name","Efficiency")]
library(knitr)
kable(output, digits=2)
NBA1415$Efficiency <- NBA1415$TotalPoints / NBA1415$TotalMinutesPlayed
MaxEfficiency<-aggregate(Efficiency~Team,NBA1415,max)
NBA1415MaxEfficiency<-merge(NBA1415,MaxEfficiency)
FinalOutput3<-NBA1415MaxEfficiency[order(NBA1415MaxEfficiency$Efficiency,decreasing = T),c("Team","Name","Efficiency")]
library(knitr)
kable(FinalOutput3, digits=2)
<<<<<<< HEAD
NBA1415$ThreesHigh <- NBA1415$ThreesMade / NBA1415$ThreesAttempted
MaxThreesHigh<-aggregate(ThreesHigh~Team,NBA1415,max)
NBA1415MaxThreesHigh<-merge(NBA1415,MaxThreesHigh)
FinalOutput4<-NBA1415MaxThreesHigh[order(NBA1415MaxThreesHigh$ThreesHigh,decreasing = T),c("Team","Name","ThreesHigh")]
library(knitr)
kable(FinalOutput4, digits=2)
=======
mat1 <- data.frame(1:4,5:8,9:12,13:16) #4個Columns，執行4次
mat1
sapply(mat1, function(x, y) {sum(x) + y}, y = 5)
lapply(1:3, function(a, b) {a*b}, b=2) #3個數字的向量，執行3次
list1<-list(1,1:2,1:3,1:4,1:5); list2<-list(2,2:3,2:4,2:5,2:6)
lapply(1:length(list2), function(i, x, y) {x[[i]] + y[[i]]},
x = list1, y = list2) #5個數字的向量，執行5次
if(!require('jsonlite')){
install.packages("jsonlite")
library(jsonlite)
}
if(!require('RCurl')){
install.packages("RCurl")
library(RCurl)
}
WaterData<-fromJSON(getURL("http://data.taipei/opendata/datalist/apiAccess?scope=resourceAquire&rid=190796c8-7c56-42e0-8068-39242b8ec927"
names(WaterData)
WaterData<-fromJSON(getURL("http://data.taipei/opendata/datalist/apiAccess?scope=resourceAquire&rid=190796c8-7c56-42e0-8068-39242b8ec927" names(WaterData)
WaterData<-fromJSON(getURL("http://data.taipei/opendata/datalist/apiAccess?scope=resourceAquire&rid=190796c8-7c56-42e0-8068-39242b8ec927"names(WaterData)
WaterData<-fromJSON(getURL("http://data.taipei/opendata/datalist/apiAccess?scope=resourceAquire&rid=190796c8-7c56-42e0-8068-39242b8ec927"names(WaterData)))
WaterData<-fromJSON(getURL("http://data.taipei/opendata/datalist/apiAccess?scope=resourceAquire&rid=190796c8-7c56-42e0-8068-39242b8ec927"))
names(WaterData)
names(WaterData$result)
WaterDataFrame<-WaterData$result$results
WaterDataFrame$longitude<-as.numeric(WaterDataFrame$longitude)
WaterDataFrame$latitude<-as.numeric(WaterDataFrame$latitude)
WaterDataFrame$qua_cntu<-as.numeric(WaterDataFrame$qua_cntu)
WaterDataFrame
myjson <- toJSON(iris, pretty=TRUE)
cat(myjson)
iris2 <- fromJSON(myjson)
head(iris2)
View(WaterDataFrame)
WaterData$result$results
names(WaterData$result)
WaterDataFrame<-WaterData$result$results
WaterDataFrame$longitude<-as.numeric(WaterDataFrame$longitude)
WaterDataFrame$latitude<-as.numeric(WaterDataFrame$latitude)
WaterDataFrame$qua_cntu<-as.numeric(WaterDataFrame$qua_cntu)
WaterDataFrame
myjson <- toJSON(iris, pretty=TRUE)
cat(myjson)
iris2 <- fromJSON(myjson)
head(iris2)
"https://graph.facebook.com/v2.5/tsaiingwen?fields=posts.limit(10)%2Clikes&access_token=CAACEdEose0cBAJ4AvZCZAZAr19afGL1nE4LLA9giON9dTOSvPC6GmAAZBUGvf5ygh6uEMRLQk76Sol9lZA5ZAidVNB5QPBKtZBawHhS5uvvhipjfVvZA1GbaMT79isjdJJZAuuvCrYu4D6gMZC9bRiw3PKE6nJrOqvAbCLOYOcIVJ9FIWngrGzYZBUfDoFfaPZAAvTsZD"
>>>>>>> origin/master
if (!require('httr')){
install.packages("httr")
library(httr)
}
<<<<<<< HEAD
if (!require('httr')){
install.packages("httr")
library(httr)
}
#put your token
token<-"CAAONRvRYQI0BALtoXzxUlnbcy19H5u13GUI9EZCpmKcbZBXZA3LlAZAqsgoJoI851aSFYgiiqT48EZCI9BwOPZC1v4SPZCxFy1XvnLBI7Rh9MOeBMW3nhepTMAMj4lJrZAFW4lehMQvBsAPYVV5St6LsrGL9cROOinCHZAZBPQvjTYGgsx13xOdbZCObHWjWJse8MrbilseTORZAgWOEi9fV3RqR" #put your token
FBData = GET(
paste0("https://graph.facebook.com/v2.5/tsaiingwen?fields=
posts{message,likes.summary(true)}&access_token=",
CAAONRvRYQI0BALtoXzxUlnbcy19H5u13GUI9EZCpmKcbZBXZA3LlAZAqsgoJoI851aSFYgiiqT48EZCI9BwOPZC1v4SPZCxFy1XvnLBI7Rh9MOeBMW3nhepTMAMj4lJrZAFW4lehMQvBsAPYVV5St6LsrGL9cROOinCHZAZBPQvjTYGgsx13xOdbZCObHWjWJse8MrbilseTORZAgWOEi9fV3RqR))
names(FBData)
token<-"CAAONRvRYQI0BALtoXzxUlnbcy19H5u13GUI9EZCpmKcbZBXZA3LlAZAqsgoJoI851aSFYgiiqT48EZCI9BwOPZC1v4SPZCxFy1XvnLBI7Rh9MOeBMW3nhepTMAMj4lJrZAFW4lehMQvBsAPYVV5St6LsrGL9cROOinCHZAZBPQvjTYGgsx13xOdbZCObHWjWJse8MrbilseTORZAgWOEi9fV3RqR" #put your token
FBData = GET(
paste0("https://graph.facebook.com/v2.5/tsaiingwen?fields=
posts{message,likes.summary(true)}&access_token=",
CAAONRvRYQI0BALtoXzxUlnbcy19H5u13GUI9EZCpmKcbZBXZA3LlAZAqsgoJoI851aSFYgiiqT48EZCI9BwOPZC1v4SPZCxFy1XvnLBI7Rh9MOeBMW3nhepTMAMj4lJrZAFW4lehMQvBsAPYVV5St6LsrGL9cROOinCHZAZBPQvjTYGgsx13xOdbZCObHWjWJse8MrbilseTORZAgWOEi9fV3RqR))
=======
FBData = GET(
paste0("https://graph.facebook.com/v2.5/tsaiingwen?fields=
posts{message,likes.summary(true)}&access_token=",
token))
names(FBData)
token<-"CAACEdEose0cBAJ4AvZCZAZAr19afGL1nE4LLA9giON9dTOSvPC6GmAAZBUGvf5ygh6uEMRLQk76Sol9lZA5ZAidVNB5QPBKtZBawHhS5uvvhipjfVvZA1GbaMT79isjdJJZAuuvCrYu4D6gMZC9bRiw3PKE6nJrOqvAbCLOYOcIVJ9FIWngrGzYZBUfDoFfaPZAAvTsZD" #put your token
FBData = GET(
paste0("https://graph.facebook.com/v2.5/tsaiingwen?fields=
posts{message,likes.summary(true)}&access_token=",
token))
names(FBData)
token<-"CAACEdEose0cBAJ4AvZCZAZAr19afGL1nE4LLA9giON9dTOSvPC6GmAAZBUGvf5ygh6uEMRLQk76Sol9lZA5ZAidVNB5QPBKtZBawHhS5uvvhipjfVvZA1GbaMT79isjdJJZAuuvCrYu4D6gMZC9bRiw3PKE6nJrOqvAbCLOYOcIVJ9FIWngrGzYZBUfDoFfaPZAAvTsZD" #put your token
FBData = GET(
paste0("https://graph.facebook.com/v2.5/tsaiingwen?fields=
posts{message,likes.summary(true)}&access_token=CAACEdEose0cBAJ4AvZCZAZAr19afGL1nE4LLA9giON9dTOSvPC6GmAAZBUGvf5ygh6uEMRLQk76Sol9lZA5ZAidVNB5QPBKtZBawHhS5uvvhipjfVvZA1GbaMT79isjdJJZAuuvCrYu4D6gMZC9bRiw3PKE6nJrOqvAbCLOYOcIVJ9FIWngrGzYZBUfDoFfaPZAAvTsZD",
token))
>>>>>>> origin/master
names(FBData)
if (!require('Rfacebook')){
install.packages("Rfacebook")
library(Rfacebook)
}
<<<<<<< HEAD
=======
getPage("tsaiingwen", token,n = 30)
>>>>>>> origin/master
totalPage<-NULL
lastDate<-Sys.Date()
numberOfPost<-30
DateVector<-seq(as.Date("2016-01-01"),lastDate,by="5 days")
DateVectorStr<-as.character(DateVector)
DateVectorStr
<<<<<<< HEAD
token<-'CAACEdEose0cBAKg3ZADq6fkgstOfBdXaZBKwoHyKP26TidyDMY1oHegYCAnNgOxQ3voaNLTZAj73e0wMHgAZBf8fZAInwSg2DQi6jFQEVSKGzsddHAfwRzTgZAArpvqVCCiWK00v8tRVx4ZAzngKeQMwqqZCU0EeFMDZBuQZC3y7OhRMBixdvYZA36YZBuO4jt8Y8ZCXoIJk2Y3kyyAZDZD'
for(i in 1:(length(DateVectorStr)-1)){
tempPage<-getPage("DoctorKoWJ", token,
since = DateVectorStr[i],until = DateVectorStr[i+1])
totalPage<-rbind(totalPage,tempPage)
}
nrow(totalPage)
totalPage$datetime <- as.POSIXct(totalPage$created_time,
format = "%Y-%m-%dT%H:%M:%S+0000",
tz = "GMT")
totalPage$dateTPE <- format(totalPage$datetime, "%Y-%m-%d",
tz = "Asia/Taipei")
totalPage$weekdays <-weekdays(as.Date(totalPage$dateTPE))
#每日發文數分析
output<-aggregate(message~weekdays+dateTPE,totalPage,length)
library(knitr)
kable(output, digits=2)
#每日likes數
output<-aggregate(likes_count~dateTPE,totalPage,mean)
library(knitr)
kable(output, digits=2)
#每日comments數
output<-aggregate(comments_count~dateTPE,totalPage,mean)
library(knitr)
kable(output, digits=2)
#每日shares數
output<-aggregate(shares_count~dateTPE,totalPage,mean)
library(knitr)
kable(output, digits=2)
if (!require('ENfacebook')){
install.packages("ENfacebook")
library(Rfacebook)
}
totalPage<-NULL
lastDate<-Sys.Date()
numberOfPost<-30
DateVector<-seq(as.Date("2016-01-01"),lastDate,by="5 days")
DateVectorStr<-as.character(DateVector)
DateVectorStr
token<-'CAAONRvRYQI0BALtoXzxUlnbcy19H5u13GUI9EZCpmKcbZBXZA3LlAZAqsgoJoI851aSFYgiiqT48EZCI9BwOPZC1v4SPZCxFy1XvnLBI7Rh9MOeBMW3nhepTMAMj4lJrZAFW4lehMQvBsAPYVV5St6LsrGL9cROOinCHZAZBPQvjTYGgsx13xOdbZCObHWjWJse8MrbilseTORZAgWOEi9fV3RqR'
for(i in 1:(length(DateVectorStr)-1)){
tempPage<-getPage("tsaiingwen", token,
since = DateVectorStr[i],until = DateVectorStr[i+1])
totalPage<-rbind(totalPage,tempPage)
}
nrow(totalPage)
totalPage$datetime <- as.POSIXct(totalPage$created_time,
format = "%Y-%m-%dT%H:%M:%S+0000",
tz = "GMT")
totalPage$dateTPE <- format(totalPage$datetime, "%Y-%m-%d",
tz = "Asia/Taipei")
totalPage$weekdays <-weekdays(as.Date(totalPage$dateTPE))
#每日發文數分析
output<-aggregate(message~weekdays+dateTPE,totalPage,length)
library(knitr)
kable(output, digits=2)
#每日likes數
output<-aggregate(likes_count~dateTPE,totalPage,mean)
library(knitr)
kable(output, digits=2)
#每日comments數
output<-aggregate(comments_count~dateTPE,totalPage,mean)
library(knitr)
kable(output, digits=2)
#每日shares數
output<-aggregate(shares_count~dateTPE,totalPage,mean)
library(knitr)
kable(output, digits=2)
#讀取蔡英文粉絲團資料
if (!require('ENfacebook')){
install.packages("ENfacebook")
library(ENfacebook)
}
totalPage<-NULL
lastDate<-Sys.Date()
numberOfPost<-30
DateVector<-seq(as.Date("2016-01-01"),lastDate,by="5 days")
DateVectorStr<-as.character(DateVector)
DateVectorStr
token<-'CAAONRvRYQI0BALtoXzxUlnbcy19H5u13GUI9EZCpmKcbZBXZA3LlAZAqsgoJoI851aSFYgiiqT48EZCI9BwOPZC1v4SPZCxFy1XvnLBI7Rh9MOeBMW3nhepTMAMj4lJrZAFW4lehMQvBsAPYVV5St6LsrGL9cROOinCHZAZBPQvjTYGgsx13xOdbZCObHWjWJse8MrbilseTORZAgWOEi9fV3RqR'
for(i in 1:(length(DateVectorStr)-1)){
tempPage<-getPage("tsaiingwen", token,
since = DateVectorStr[i],until = DateVectorStr[i+1])
totalPage<-rbind(totalPage,tempPage)
}
nrow(totalPage)
totalPage$datetime <- as.POSIXct(totalPage$created_time,
format = "%Y-%m-%dT%H:%M:%S+0000",
tz = "GMT")
totalPage$dateTPE <- format(totalPage$datetime, "%Y-%m-%d",
tz = "Asia/Taipei")
totalPage$weekdays <-weekdays(as.Date(totalPage$dateTPE))
#每日發文數分析
output<-aggregate(message~weekdays+dateTPE,totalPage,length)
library(knitr)
kable(output, digits=2)
#每日likes數
output<-aggregate(likes_count~dateTPE,totalPage,mean)
library(knitr)
kable(output, digits=2)
#每日comments數
output<-aggregate(comments_count~dateTPE,totalPage,mean)
library(knitr)
kable(output, digits=2)
#每日shares數
output<-aggregate(shares_count~dateTPE,totalPage,mean)
library(knitr)
kable(output, digits=2)
install.packages("Rfacebook")  # from CRAN
library(devtools)
install_github("Rfacebook", "pablobarbera", subdir = "Rfacebook")
install.packages("Rfacebook")
if (!require('Rfacebook')){
install.packages("Rfacebook")
library(Rfacebook)
}
totalPage<-NULL
lastDate<-Sys.Date()
numberOfPost<-30
DateVector<-seq(as.Date("2016-01-01"),lastDate,by="5 days")
DateVectorStr<-as.character(DateVector)
DateVectorStr
token<-'CAAONRvRYQI0BALtoXzxUlnbcy19H5u13GUI9EZCpmKcbZBXZA3LlAZAqsgoJoI851aSFYgiiqT48EZCI9BwOPZC1v4SPZCxFy1XvnLBI7Rh9MOeBMW3nhepTMAMj4lJrZAFW4lehMQvBsAPYVV5St6LsrGL9cROOinCHZAZBPQvjTYGgsx13xOdbZCObHWjWJse8MrbilseTORZAgWOEi9fV3RqR'
for(i in 1:(length(DateVectorStr)-1)){
tempPage<-getPage("tsaiingwen", token,
since = DateVectorStr[i],until = DateVectorStr[i+1])
totalPage<-rbind(totalPage,tempPage)
}
nrow(totalPage)
totalPage$datetime <- as.POSIXct(totalPage$created_time,
format = "%Y-%m-%dT%H:%M:%S+0000",
tz = "GMT")
totalPage$dateTPE <- format(totalPage$datetime, "%Y-%m-%d",
tz = "Asia/Taipei")
totalPage$weekdays <-weekdays(as.Date(totalPage$dateTPE))
#每日發文數分析
output<-aggregate(message~weekdays+dateTPE,totalPage,length)
library(knitr)
kable(output, digits=2)
#每日likes數
output<-aggregate(likes_count~dateTPE,totalPage,mean)
library(knitr)
kable(output, digits=2)
#每日comments數
output<-aggregate(comments_count~dateTPE,totalPage,mean)
library(knitr)
kable(output, digits=2)
#每日shares數
output<-aggregate(shares_count~dateTPE,totalPage,mean)
library(knitr)
kable(output, digits=2)
if (!require('Rfacebook')){
install.packages("Rfacebook")
library(Rfacebook)
}
totalPage<-NULL
lastDate<-Sys.Date()
numberOfPost<-30
DateVector<-seq(as.Date("2016-01-01"),lastDate,by="5 days")
DateVectorStr<-as.character(DateVector)
DateVectorStr
totalPage<-NULL
lastDate<-Sys.Date()
numberOfPost<-30
DateVector<-seq(as.Date("2016-01-01"),lastDate,by="5 days")
DateVectorStr<-as.character(DateVector)
DateVectorStr
token<-'CAAONRvRYQI0BAEDLHd9BkeOn1OlDzaZBUXCsZCk96EBBqXgHZCkxs3E9hRuS5DGaiQ4LGjWXHBxSLdC8yZAbPp2JazO8bKnAujsD08qbFfiHh2GGWZBdukKgZCVOiYgQVopPveC4ofzdCSDCEMSWSSZCCrwZA3ZCWXa1GxEZCOhhn4O1ZB3BYKuIg8mtN0BnWZAwaMl1hJvzCnUt8eYdLZAqDUE1X'
for(i in 1:(length(DateVectorStr)-1)){
tempPage<-getPage("tsaiingwen", token,
since = DateVectorStr[i],until = DateVectorStr[i+1])
totalPage<-rbind(totalPage,tempPage)
}
nrow(totalPage)
totalPage$datetime <- as.POSIXct(totalPage$created_time,
format = "%Y-%m-%dT%H:%M:%S+0000",
tz = "GMT")
totalPage$dateTPE <- format(totalPage$datetime, "%Y-%m-%d",
tz = "Asia/Taipei")
totalPage$weekdays <-weekdays(as.Date(totalPage$dateTPE))
library(knitr)
kable(output, digits=2)
getPage("tsaiingwen",token,n=30)
getPage("tsaiingwen",token,n=30)
totalPage<-NULL
lastDate<-Sys.Date()
numberOfPost<-30
DateVector<-seq(as.Date("2016-01-01"),lastDate,by="5 days")
DateVectorStr<-as.character(DateVector)
DateVectorStr
token<-'CAAONRvRYQI0BALtoXzxUlnbcy19H5u13GUI9EZCpmKcbZBXZA3LlAZAqsgoJoI851aSFYgiiqT48EZCI9BwOPZC1v4SPZCxFy1XvnLBI7Rh9MOeBMW3nhepTMAMj4lJrZAFW4lehMQvBsAPYVV5St6LsrGL9cROOinCHZAZBPQvjTYGgsx13xOdbZCObHWjWJse8MrbilseTORZAgWOEi9fV3RqR'
for(i in 1:(length(DateVectorStr)-1)){
tempPage<-getPage("tsaiingwen", token,
since = DateVectorStr[i],until = DateVectorStr[i+1])
totalPage<-rbind(totalPage,tempPage)
}
nrow(totalPage)
totalPage$datetime <- as.POSIXct(totalPage$created_time,
format = "%Y-%m-%dT%H:%M:%S+0000",
tz = "GMT")
totalPage$dateTPE <- format(totalPage$datetime, "%Y-%m-%d",
tz = "Asia/Taipei")
totalPage$weekdays <-weekdays(as.Date(totalPage$dateTPE))
if (!require('Rfacebook')){
install.packages("Rfacebook")
library(Rfacebook)
}
totalPage<-NULL
lastDate<-Sys.Date()
numberOfPost<-30
DateVector<-seq(as.Date("2016-01-01"),lastDate,by="5 days")
DateVectorStr<-as.character(DateVector)
DateVectorStr
token<-'CAAONRvRYQI0BALtoXzxUlnbcy19H5u13GUI9EZCpmKcbZBXZA3LlAZAqsgoJoI851aSFYgiiqT48EZCI9BwOPZC1v4SPZCxFy1XvnLBI7Rh9MOeBMW3nhepTMAMj4lJrZAFW4lehMQvBsAPYVV5St6LsrGL9cROOinCHZAZBPQvjTYGgsx13xOdbZCObHWjWJse8MrbilseTORZAgWOEi9fV3RqR'
=======
token<-'CAACEdEose0cBAJ4AvZCZAZAr19afGL1nE4LLA9giON9dTOSvPC6GmAAZBUGvf5ygh6uEMRLQk76Sol9lZA5ZAidVNB5QPBKtZBawHhS5uvvhipjfVvZA1GbaMT79isjdJJZAuuvCrYu4D6gMZC9bRiw3PKE6nJrOqvAbCLOYOcIVJ9FIWngrGzYZBUfDoFfaPZAAvTsZD'
>>>>>>> origin/master
for(i in 1:(length(DateVectorStr)-1)){
tempPage<-getPage("tsaiingwen", token,
since = DateVectorStr[i],until = DateVectorStr[i+1])
totalPage<-rbind(totalPage,tempPage)
}
nrow(totalPage)
<<<<<<< HEAD
totalPage$datetime <- as.POSIXct(totalPage$created_time,
format = "%Y-%m-%dT%H:%M:%S+0000",
tz = "GMT")
totalPage$dateTPE <- format(totalPage$datetime, "%Y-%m-%d",
tz = "Asia/Taipei")
totalPage$weekdays <-weekdays(as.Date(totalPage$dateTPE))
if (!require('Rfacebook')){
install.packages("Rfacebook")
library(Rfacebook)
}
token<-'CAAONRvRYQI0BAP09cCiPRonuBemgd46ow1x3rYvCzqgoSZBnjrwuWZA1vXEyoRvU0376R0VC36JVyWBP7upvivrnnsJJNpkUqGkAskKhr947Pr21alPZBC4ep5qPT5ZBneUpkxgOg3AKVfcJ01kZC1o4vTcaHQPbXKTNivK3ZAaT0B5A0cACoB89a89GRvVWCufO2rEEfO3cXQiGv4jaB3'
totalPage<-NULL
lastDate<-Sys.Date()
DateVectorStr<-as.character(seq(as.Date("2016-01-01"),lastDate,by="5 days"))
for(i in 1:(length(DateVectorStr)-1)){
tempPage<-getPage("cherngs.y", token,
since = DateVectorStr[i],until = DateVectorStr[i+1])
totalPage<-rbind(totalPage,tempPage)
}
nrow(totalPage)
totalPage$datetime <- as.POSIXct(totalPage$created_time,
format = "%Y-%m-%dT%H:%M:%S+0000",
tz = "GMT")
totalPage$dateTPE <- format(totalPage$datetime, "%Y-%m-%d",
tz = "Asia/Taipei")
totalPage$weekdays <-weekdays(as.Date(totalPage$dateTPE))
=======
View(totalPage)
>>>>>>> origin/master
if (!require('reshape2')){
install.packages("reshape2")
library(reshape2)
}
head(mtcars)
mtcars$carname <- rownames(mtcars)
carMelt <- melt(mtcars,id=c("carname","gear","cyl"),
measure.vars=c("mpg","hp"))
head(carMelt,n=3)
tail(carMelt,n=3)
cylData <- dcast(carMelt, cyl ~ variable)
cylData
cylData <- dcast(carMelt, cyl ~ variable,mean)
cylData
library(SportsAnalytics) #install.packages("SportsAnalytics")
NBA1415<-fetch_NBAPlayerStatistics("14-15")
boxplot(Blocks~Position,data=NBA1415)
library(ggplot2) #install.packages("ggplot2")
qplot(TotalPoints, TotalMinutesPlayed,
facets = .~Position, data = NBA1415)+
stat_smooth(method="glm")
#library(ggplot2) #install.packages("ggplot2")
qplot(TotalRebounds, TotalMinutesPlayed,
facets = .~Position, data = NBA1415)+
stat_smooth(method="glm")
if (!require('datasets')){
install.packages("datasets")
library(datasets)
}
data(cars)
plot(cars$speed, cars$dist)
if (!require('lattice')){
install.packages("lattice")
library(lattice)
}
state <- data.frame(state.x77, region = state.region)
state
if (!require('datasets')){
install.packages("datasets")
library(datasets)
}
data(cars)
plot(cars$speed, cars$dist)
View(cars)
if (!require('lattice')){
install.packages("lattice")
library(lattice)
}
if (!require('lattice')){
install.packages("lattice")
library(lattice)
}
state <- data.frame(state.x77, region = state.region)
state
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4, 1))
if (!require('ggplot2')){
install.packages("ggplot2")
library(ggplot2)
}
qplot(Life.Exp, Income,facets = .~region, data = state)
state
library(lattice)
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4, 1))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(2, 2))
library(ggplot2)
data(mpg)
qplot(displ, hwy, data = mpg)
if (!require('ggplot2')){
install.packages("ggplot2")
library(ggplot2)
}
qplot(Life.Exp, Income,facets = .~region, data = state)
qplot(Life.Exp, Income,facets = region.~, data = state)
qplot(Life.Exp, Income,facets = region .~, data = state)
qplot(Life.Exp, Income,facets = region.~, data = state)
qplot(Life.Exp, Income,facets = region~., data = state)
qplot(Life.Exp, Income,facets = .~region, data = state)
qplot(Life.Exp, Income,facets = region~., data = state)
library(datasets)
hist(airquality$Ozone)  ## Draw a new plot
library(datasets)
with(airquality, plot(Wind, Ozone))
library(datasets)
airquality <- transform(airquality, Month = factor(Month))
boxplot(Ozone ~ Month, airquality, xlab = "Month", ylab = "Ozone (ppb)")
