1+1
6*4
2^9
5%%2
6^7
5-8
6^7
6+5
5-8
5-8
6^7
a<-9
b<-4
a+b
a+b
a/b
a*b
x<-(1,2,3)
x<-c(1,2,3)
x+x
x+y
x<-c(1,2,3)
x+x
y<-c(2,3,4)
x+y
z<-c(1,2,3,4,5,6)
x+z
nan
NaN
?nan
sprt(4)
sqrt(4)
round(26.4852138846456,2)
round(264852138846456,-4)
round(26.485213884,2)
round(26485213884,-4)
sqrt(4)
round(26.485213884,2)
round(26485213884,-4)
class(a)
is.character(a)
x
longx<-1:200
length(lapply(longx)
length(longx)
length(longx)
length(stringx)
length(stringx)
length(stringx)
length(stringX)
stringX<-"How are you?"
length(stringX)
stringX<-"How are you?"
length(stringX)
stringX<-"How are you?"
length(stringX)
stringX<-"How are you?"
length(stringX)
length(stringX)
nchar(stringX)
seq(1,9,2)
1.4:5.6
seq(1,9)
rep(1:5)
rep(1:5)times=3
rep(1:5 times=3)
x<-1:30
sum(x)
mean(x)
max(x)
min(x)
median(x)
round(sd(x),digits=3)
summary(x)
sort(x)
sort(x,decreasing = t)
sort(x,decreasing = T)
rev(x)
sum(c(T,T,T,F,F,T,F))
matrix(2,3)
matrix(nrow=3,ncol=4)
matrix(1:6,nrow=3,ncol=4)
dim(matrix(1:6,nrow=3,ncol=4))
if(!require('SportsAnalytics')){
install.packages("SportsAnalytics")
library(SportsAnalytics)
}
NBA1415<-fetch_NBAPlayerStatistics("14-15")
NBA1415
apply(NBA1415[,c("GamesPlayed","TotalMinutesPlayed","TotalPoints")],2,mean)
FinalOutput<-NULL
for(team in unique(NBA1415$Team)){
selectTeam<-subset(NBA1415,Team==team)
FinalOutput<-rbind(FinalOutput,
selectTeam[
order(selectTeam$TotalPoints,decreasing = T)[1],
c("Name","Team","TotalPoints")])
}
FinalOutput
FinalOutput2<-NULL
for(team in unique(NBA1415$Team)){
selectTeam<-subset(NBA1415,Team==team)
FinalOutput2<-rbind(FinalOutput2,
selectTeam[
order(selectTeam$TotalMinutesPlayed,decreasing = T)[1],
c("Name","Team","TotalMinutesPlayed")])
}
FinalOutput2
#各隊得分王
FinalOutput2<-NULL
for(team in unique(NBA1415$Team)){
selectTeam<-subset(NBA1415,Team==team)
FinalOutput2<-rbind(FinalOutput2,
selectTeam[
order(selectTeam$TotalPoints,decreasing = T)[1],
c("Name","Team","TotalPoints")])
}
FinalOutput2
#各隊最辛苦球員(出戰分鐘數最多)
FinalOutput<-NULL
for(team in unique(NBA1415$Team)){
selectTeam<-subset(NBA1415,Team==team)
FinalOutput<-rbind(FinalOutput,
selectTeam[
order(selectTeam$TotalMinutesPlayed,decreasing = T)[1],
c("Name","Team","TotalMinutesPlayed")])
}
FinalOutput
FinalOutput3<-NULL
for(team in unique(NBA1415$Team)){
selectTeam<-subset(NBA1415,Team==team)
FinalOutput3<-rbind(FinalOutput3,
selectTeam[
order(selectTeam$TotalPoints/TotalMinutesPlayed,decreasing = T)[1],
c("Name","Team","TotalPoints/TotalMinutesPlayed")])
}
FinalOutput3
efficiency <- NBA1415$TotalPoints /NBA1415$TotalMinutesPlayed
efficiency
Maxefficiency<-aggregate(efficiency~Team,NBA1415,max)
Maxefficiency
NBA1415Maxefficiency<-merge(NBA1415,Maxefficiency)
NBA1415Maxefficiency
output3<-NBA1415Maxefficiency[order(NBA1415Maxefficiency$efficiency,decreasing = T),c("Team","Name","efficiency")]
library(knitr)
kable(output3, digits=2)
Highest<- NBA1415$ThreesMade / NBA1415$ThreesAttempted
Highest
MaxHighest<-aggregate(Highest~Team,NBA1415,max)
MaxHighest
NBA1415MaxHighest<-merge(NBA1415,MaxHighest)
NBA1415MaxHighest
output3<-NBA1415MaxHighest[order(NBA1415MaxHighest$Highest,decreasing = T),c("Team","Name","Highest")]
library(knitr)
kable(output3, digits=2)
Highest<- NBA1415$ThreesMade / NBA1415$ThreesAttempted
Highest
MaxHighest<-aggregate(Highest~Team,NBA1415,max)
MaxHighest
NBA1415MaxHighest<-merge(NBA1415,MaxHighest)
NBA1415MaxHighest
output4<-NBA1415MaxHighest[order(NBA1415MaxHighest$Highest,decreasing = T),c("Team","Name","Highest")]
library(knitr)
kable(output4, digits=2)
efficiency <- NBA1415$TotalPoints /NBA1415$TotalMinutesPlayed
efficiency
Maxefficiency<-aggregate(efficiency~Team,NBA1415,max)
Maxefficiency
NBA1415Maxefficiency<-merge(NBA1415,Maxefficiency)
NBA1415Maxefficiency
output3<-NBA1415Maxefficiency[order(NBA1415Maxefficiency$efficiency,decreasing = T),c("Team","Name","efficiency")]
output3
Highest<- NBA1415$ThreesMade / NBA1415$ThreesAttempted
Highest
MaxHighest<-aggregate(Highest~Team,NBA1415,max)
MaxHighest
NBA1415MaxHighest<-merge(NBA1415,MaxHighest)
NBA1415MaxHighest
FinalOutput4<-NBA1415MaxHighest[order(NBA1415MaxHighest$Highest,decreasing = T),c("Team","Name","Highest")]
FinalOutput4
MaxHighest
knitr::opts_chunk$set(echo = TRUE)
#各隊最辛苦球員(出戰分鐘數最多)
FinalOutput<-NULL
for(team in unique(NBA1415$Team)){
selectTeam<-subset(NBA1415,Team==team)
FinalOutput<-rbind(FinalOutput,
selectTeam[
order(selectTeam$TotalMinutesPlayed,decreasing = T)[1],
c("Name","Team","TotalMinutesPlayed")])
}
FinalOutput
library(knitr)
kable(output4, digits=2)
FinalOutput<-NULL
for(team in unique(NBA1415$Team)){
selectTeam<-subset(NBA1415,Team==team)
FinalOutput<-rbind(FinalOutput,
selectTeam[
order(selectTeam$TotalMinutesPlayed,decreasing = T)[1],
c("Name","Team","TotalMinutesPlayed")])
}
FinalOutput
FinalOutput<-NULL
for(team in unique(NBA1415$Team)){
selectTeam<-subset(NBA1415,Team==team)
FinalOutput<-rbind(FinalOutput,
selectTeam[
order(selectTeam$TotalMinutesPlayed,decreasing = T)[1],
c("Name","Team","TotalMinutesPlayed")])
}
FinalOutput
library(knitr)
kable(FinalOutput, digits=2)
#各隊得分王
FinalOutput2<-NULL
for(team in unique(NBA1415$Team)){
selectTeam<-subset(NBA1415,Team==team)
FinalOutput2<-rbind(FinalOutput2,
selectTeam[
order(selectTeam$TotalPoints,decreasing = T)[1],
c("Name","Team","TotalPoints")])
}
FinalOutput2
library(knitr)
kable(FinalOutput2, digits=2)
efficiency <- NBA1415$TotalPoints /NBA1415$TotalMinutesPlayed
efficiency
Maxefficiency<-aggregate(efficiency~Team,NBA1415,max)
Maxefficiency
NBA1415Maxefficiency<-merge(NBA1415,Maxefficiency)
NBA1415Maxefficiency
FinalOutput3<-NBA1415Maxefficiency[order(NBA1415Maxefficiency$efficiency,decreasing = T),c("Team","Name","efficiency")]
FinalOutput3
library(knitr)
kable(FinalOutput3, digits=2)
#各隊三分球出手最準的球員(ThreesMade/ThreesAttempted 最高)
Highest<- NBA1415$ThreesMade / NBA1415$ThreesAttempted
Highest
MaxHighest<-aggregate(Highest~Team,NBA1415,max)
MaxHighest
NBA1415MaxHighest<-merge(NBA1415,MaxHighest)
NBA1415MaxHighest
FinalOutput4<-NBA1415MaxHighest[order(NBA1415MaxHighest$Highest,decreasing = T),c("Team","Name","Highest")]
FinalOutput4
library(knitr)
kable(output4, digits=2)
Highest<- NBA1415$ThreesMade / NBA1415$ThreesAttempted
Highest
MaxHighest<-aggregate(Highest~Team,NBA1415,max)
MaxHighest
NBA1415MaxHighest<-merge(NBA1415,MaxHighest)
NBA1415MaxHighest
FinalOutput4<-NBA1415MaxHighest[order(NBA1415MaxHighest$Highest,decreasing = T),c("Team","Name","Highest")]
FinalOutput4
library(knitr)
kable(FinalOutput4, digits=2)
FinalOutput2<-NULL
for(team in unique(NBA1415$Team)){
selectTeam<-subset(NBA1415,Team==team)
FinalOutput2<-rbind(FinalOutput2,
selectTeam[
order(selectTeam$TotalPoints,decreasing = T),c("Name","Team","TotalPoints")])
}
FinalOutput2
library(knitr)
kable(FinalOutput2, digits=2)
FinalOutput2<-NULL
for(team in unique(NBA1415$Team)){
selectTeam<-subset(NBA1415,Team==team)
FinalOutput2<-rbind(FinalOutput2,
selectTeam[
order(selectTeam$TotalPoints,decreasing = T)[1],
c("Name","Team","TotalPoints")])
}
FinalOutput2
library(knitr)
kable(FinalOutput2, digits=2)
FinalOutput2<-NULL
MaxPoint<-aggregate(TotalPoints~Team,NBA1415,max)
NBA1415MaxPoint<-merge(NBA1415,MaxPoint)
FinalOutput2<-NBA1415MaxPoint[order(NBA1415MaxPoint$TotalPoints,decreasing = T),c("Team","Name","TotalPoints")]
library(knitr)
kable(FinalOutput2, digits=2)
#各隊三分球出手最準的球員(ThreesMade/ThreesAttempted 最高)
Highest<- NBA1415$ThreesMade / NBA1415$ThreesAttempted
MaxHighest<-aggregate(Highest~Team,NBA1415,max)
NBA1415MaxHighest<-merge(NBA1415,MaxHighest)
FinalOutput4<-NBA1415MaxHighest[order(NBA1415MaxHighest$Highest,decreasing = T),c("Team","Name","Highest")]
library(knitr)
kable(FinalOutput4, digits=2)
#各隊最有效率的球員(總得分/出戰分鐘數)
efficiency <- NBA1415$TotalPoints /NBA1415$TotalMinutesPlayed
Maxefficiency<-aggregate(efficiency~Team,NBA1415,max)
NBA1415Maxefficiency<-merge(NBA1415,Maxefficiency)
FinalOutput3<-NBA1415Maxefficiency[order(NBA1415Maxefficiency$efficiency,decreasing = T),c("Team","Name","efficiency")]
library(knitr)
kable(FinalOutput3, digits=2)
